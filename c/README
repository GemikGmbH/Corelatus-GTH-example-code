Author: matthias@corelatus.se
$Id: README,v 1.10 2010-02-26 19:47:17 matthias Exp $
----------------------------------------------------------------------

This is example code in C for a Corelatus GTH. It is available under
a BSD licence. It includes:

  A complete parser for the XML a GTH emits. (see gth_client_xml_parse.h)

  A C API for some, but not all, GTH features. (see gth_apilib.h)

  Four examples which use the C API: an SS7 sniffer, a CAS sniffer,
  a timeslot recorder and a timeslot playback program.

  Pre-compiled .exe files of the examples for Win32

We test this code on linux and Win32.

The Win32 code uses a gcc toolchain. Some changes are probably
necessary if you want to use visual studio. We have no visual studio
experience.

SS7 sniffer which saves to PCAP (wireshark) format files
--------------------------------------------------------

  Sniffs SS7 packets from a live E1 link and saves them
  to a 'pcap' file.

  Assumes you have a GTH connected to an SS7 link and a server
  connected to the GTH via IP (ethernet).

  Typical use:

    >./save_to_pcap 172.16.2.7 1A 2A 16 ss7.pcap
    capturing packets, press ^C to abort
    saving capture to file ss7.pcap.1

  you can then open the ss7.pcap.1 file in 'wireshark' (www.wireshark.org)

  If you don't have a live E1 link, you can use a GTH to replay
  previously recorded data, using 'playback_file'

  There's a WWW page which discusses this at 

     http://www.corelatus.com/gth/api/save_to_pcap/index.html
  

CAS line and register signalling sniffer
----------------------------------------

  Sniffs CAS R5 tones and line signalling from an E1 and
  prints them to standard output.

  Assumes you have a GTH module and a loopback cable connected
  from P1 to P2. Typical use:

   > ./monitor_cas 172.16.2.7
   setting up layer 1
   setting up layer 2
   waiting for GTH to connect to our signalling socket
   Waiting for tone detections

  And in another window:

   >./playback_file 172.16.2.7 1A 1 audio/mfc_fwd_3 
   wrote 800 octets to the <player>
   all done

Timeslot recorder
-----------------

  Record the (bit exact) contents of a timeslot to a file, optionally
  with a .wav header. Typical use:

   >./record 172.16.2.7 1A 1 recorded_file.wav

Timeslot playback
-----------------

  Plays back a previously recorded (or generated by some other means,
  for instance converting an audio file to a-law) timeslot on an
  E1. Typical use:

   >./playback_file 172.16.2.7 1A 1 audio/mfc_fwd_3 
   wrote 800 octets to the <player>
   all done

Software image installer
------------------------

  The software on the GTH can be upgraded with new releases 
  (typically with new features and bug fixes) from www.corelatus.com.

  The upgrade process works via the API. Typical use:

   >./install_release gth21 /tmp/gth2_system_33c.gth
   Current system image version: gth2_system_32a
   Current failsafe image version: gth2_failsafe_9
   switching to failsafe
   waiting for the GTH to reboot
   GTH back up
   installing software image /tmp/gth2_system_33c.gth
   switching to system
   waiting for the GTH to reboot
   GTH back up
   Current system image version: gth2_system_33c
 

GTH API for C programs
----------------------

  gth_apilib.h provides an interface to the GTH for C programs.  This
  interface lets you set up communication to the GTH and then send
  commands for 

      - recording and playing back timeslots 
      - sniffing CAS
      - sniffing SS7 MTP2
      - installing software releases on the GTH

  The GTH can do more than the above, extending gth_apilib.h to 
  cover more GTH features is left as an exercise, either for the
  reader or, on request, by Corelatus.

  Typical use:

    #include "gth_apilib.h"

    GTH_api api;
    char buffer[MAX_JOB_ID];

    gth_connect(&api, "172.16.1.10");
    gth_new_player(&api, "3A", 16, buffer);

    ...

Parser for GTH XML
------------------

  gth_client_xml_parse.h provides a C interface to a parser which
  understands all possible responses from a GTH. 

  Normally, controlling the GTH through gth_apilib.h is preferable to
  using the parser directly.

Questions, comments? Send mail to Matt Lang (matthias@corelatus.se)